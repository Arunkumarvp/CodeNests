@model CodeNest.DTO.Models.CompositeViewModel
@await Html.PartialAsync("Sections/_Variables")
@{
  TempData.Keep();
  Layout = "_CommonMasterLayout";

  ViewData["contentNavbar"] = true;

  @* Display elements *@
  ViewData["isMenu"] = (ViewData["isMenu"] ??= true);
  ViewData["isFlex"] = (ViewData["isFlex"] ??= false);
  @* ViewData["customizerHidden"] = (ViewData["customizerHidden"] ??= "customizer-hide"); *@


  @*HTML Classes *@
  ViewData["navbarDetached"] = (ViewData["navbarDetached"] ?? "navbar-detached");

  @*Content classes *@
  ViewData["container"] = (ViewData["container"] ?? "container-xxl");
  ViewData["containerNav"] = (ViewData["containerNav"] ?? "container-xxl");
}

@section VendorStyles{ @RenderSection("VendorStyles", required: false) }

@section PageStyles{ @RenderSection("PageStyles", required: false) }

@section VendorScripts{ @RenderSection("VendorScripts", required: false) }

@section PageScripts{ @RenderSection("PageScripts", required: false) }
@RenderSection("Scripts", required: false)


@{
  bool isMenu = ViewData["isMenu"] != null && Convert.ToBoolean(ViewData["isMenu"]);
}
<nav class="navbar navbar-expand-lg navbar-light bg-light">
    <div class="container-fluid">
        <a class="navbar-brand" href="#">Navbar</a>
        <button class="navbar-toggler" type="button" data-bs-toggle="collapse" data-bs-target="#navbarNav" aria-controls="navbarNav" aria-expanded="false" aria-label="Toggle navigation"><span class="navbar-toggler-icon"></span></button>
        <div class="collapse navbar-collapse" id="navbarNav">
            <ul class="navbar-nav ms-auto">
                <li class="nav-item dropdown">
                    <a class="nav-link dropdown-toggle" href="#" id="navbarDropdown1" role="button" data-bs-toggle="dropdown" aria-expanded="false"> WorkSpace </a>
                    <ul class="dropdown-menu dropdown-menu-sm scrollable-menu" aria-labelledby="navbarDropdown1">
                        @foreach (var item in Model.WorkspacesList)
                        {
                            <li><a class="dropdown-item" href="#">@item.Name</a></li>
                        }
                    </ul>
                </li>



                <li class="nav-item dropdown">
                    <a class="nav-link dropdown-toggle" href="#" id="navbarDropdown2" role="button" data-bs-toggle="dropdown" aria-expanded="false"> Dropdown 2 </a>
                    <ul class="dropdown-menu" aria-labelledby="navbarDropdown2">
                        <li><a class="dropdown-item" href="#">Action 1</a></li>
                        <li><a class="dropdown-item" href="#">Action 2</a></li>
                        <li><a class="dropdown-item" href="#">Another action</a></li>
                    </ul>
                </li>
            </ul>
        </div>
    </div>
</nav>
<div class='layout-wrapper layout-content-navbar @(isMenu ? "" : "layout-without-menu")'>
  <div class='layout-container'>

    @if (isMenu)
    {
      @await Html.PartialAsync("Sections/Menu/_VerticalMenu")
    }
    <!-- Layout page -->
    <div class="layout-page">
      <!-- Content wrapper -->
      <div class="content-wrapper">

        <!-- Content -->
        <div class='@ViewData["container"] @(Convert.ToBoolean(@ViewData["isFlex"]) ? "d-flex align-items-stretch flex-grow-1 p-0" : "flex-grow-1 container-p-y")'>
          @RenderBody()
        </div>
        <!-- / Content -->

        <div class="content-backdrop fade"></div>
      </div>
      <!--/ Content wrapper -->
    </div>
    <!-- / Layout page -->
  </div>
  <!-- Overlay -->
  @if (@ViewData["isMenu"] != null && Convert.ToBoolean(@ViewData["isMenu"]))
  {
    <div class="layout-overlay layout-menu-toggle"></div>
  }
  <!-- Drag Target Area To SlideIn Menu On Small Screens -->
  <div class="drag-target"></div>
</div>
